0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Feb 28 20:44:28 2024
0000              5   ;--------------------------------------------------------
                  5   $name Lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _getsn
0000             29            public _LCDprint
0000             30            public _LCD_4BIT
0000             31            public _WriteCommand
0000             32            public _WriteData
0000             33            public _LCD_byte
0000             34            public _LCD_pulse
0000             35            public _TIMER0_Init
0000             36            public _waitms
0000             37            public _Timer3us
0000             38            public __c51_external_startup
0000             39            public _LCDprint_PARM_3
0000             40            public _buffer
0000             41            public _getsn_PARM_2
0000             42            public _LCDprint_PARM_2
0000             43            public _overflow_count
0000             44   ;--------------------------------------------------------
0000             45   ; Special Function Registers
0000             46   ;--------------------------------------------------------
0000             47   _ACC            DATA 0xe0
0000             48   _ADC0ASAH       DATA 0xb6
0000             49   _ADC0ASAL       DATA 0xb5
0000             50   _ADC0ASCF       DATA 0xa1
0000             51   _ADC0ASCT       DATA 0xc7
0000             52   _ADC0CF0        DATA 0xbc
0000             53   _ADC0CF1        DATA 0xb9
0000             54   _ADC0CF2        DATA 0xdf
0000             55   _ADC0CN0        DATA 0xe8
0000             56   _ADC0CN1        DATA 0xb2
0000             57   _ADC0CN2        DATA 0xb3
0000             58   _ADC0GTH        DATA 0xc4
0000             59   _ADC0GTL        DATA 0xc3
0000             60   _ADC0H          DATA 0xbe
0000             61   _ADC0L          DATA 0xbd
0000             62   _ADC0LTH        DATA 0xc6
0000             63   _ADC0LTL        DATA 0xc5
0000             64   _ADC0MX         DATA 0xbb
0000             65   _B              DATA 0xf0
0000             66   _CKCON0         DATA 0x8e
0000             67   _CKCON1         DATA 0xa6
0000             68   _CLEN0          DATA 0xc6
0000             69   _CLIE0          DATA 0xc7
0000             70   _CLIF0          DATA 0xe8
0000             71   _CLKSEL         DATA 0xa9
0000             72   _CLOUT0         DATA 0xd1
0000             73   _CLU0CF         DATA 0xb1
0000             74   _CLU0FN         DATA 0xaf
0000             75   _CLU0MX         DATA 0x84
0000             76   _CLU1CF         DATA 0xb3
0000             77   _CLU1FN         DATA 0xb2
0000             78   _CLU1MX         DATA 0x85
0000             79   _CLU2CF         DATA 0xb6
0000             80   _CLU2FN         DATA 0xb5
0000             81   _CLU2MX         DATA 0x91
0000             82   _CLU3CF         DATA 0xbf
0000             83   _CLU3FN         DATA 0xbe
0000             84   _CLU3MX         DATA 0xae
0000             85   _CMP0CN0        DATA 0x9b
0000             86   _CMP0CN1        DATA 0x99
0000             87   _CMP0MD         DATA 0x9d
0000             88   _CMP0MX         DATA 0x9f
0000             89   _CMP1CN0        DATA 0xbf
0000             90   _CMP1CN1        DATA 0xac
0000             91   _CMP1MD         DATA 0xab
0000             92   _CMP1MX         DATA 0xaa
0000             93   _CRC0CN0        DATA 0xce
0000             94   _CRC0CN1        DATA 0x86
0000             95   _CRC0CNT        DATA 0xd3
0000             96   _CRC0DAT        DATA 0xcb
0000             97   _CRC0FLIP       DATA 0xcf
0000             98   _CRC0IN         DATA 0xca
0000             99   _CRC0ST         DATA 0xd2
0000            100   _DAC0CF0        DATA 0x91
0000            101   _DAC0CF1        DATA 0x92
0000            102   _DAC0H          DATA 0x85
0000            103   _DAC0L          DATA 0x84
0000            104   _DAC1CF0        DATA 0x93
0000            105   _DAC1CF1        DATA 0x94
0000            106   _DAC1H          DATA 0x8a
0000            107   _DAC1L          DATA 0x89
0000            108   _DAC2CF0        DATA 0x95
0000            109   _DAC2CF1        DATA 0x96
0000            110   _DAC2H          DATA 0x8c
0000            111   _DAC2L          DATA 0x8b
0000            112   _DAC3CF0        DATA 0x9a
0000            113   _DAC3CF1        DATA 0x9c
0000            114   _DAC3H          DATA 0x8e
0000            115   _DAC3L          DATA 0x8d
0000            116   _DACGCF0        DATA 0x88
0000            117   _DACGCF1        DATA 0x98
0000            118   _DACGCF2        DATA 0xa2
0000            119   _DERIVID        DATA 0xad
0000            120   _DEVICEID       DATA 0xb5
0000            121   _DPH            DATA 0x83
0000            122   _DPL            DATA 0x82
0000            123   _EIE1           DATA 0xe6
0000            124   _EIE2           DATA 0xf3
0000            125   _EIP1           DATA 0xbb
0000            126   _EIP1H          DATA 0xee
0000            127   _EIP2           DATA 0xed
0000            128   _EIP2H          DATA 0xf6
0000            129   _EMI0CN         DATA 0xe7
0000            130   _FLKEY          DATA 0xb7
0000            131   _HFO0CAL        DATA 0xc7
0000            132   _HFO1CAL        DATA 0xd6
0000            133   _HFOCN          DATA 0xef
0000            134   _I2C0ADM        DATA 0xff
0000            135   _I2C0CN0        DATA 0xba
0000            136   _I2C0DIN        DATA 0xbc
0000            137   _I2C0DOUT       DATA 0xbb
0000            138   _I2C0FCN0       DATA 0xad
0000            139   _I2C0FCN1       DATA 0xab
0000            140   _I2C0FCT        DATA 0xf5
0000            141   _I2C0SLAD       DATA 0xbd
0000            142   _I2C0STAT       DATA 0xb9
0000            143   _IE             DATA 0xa8
0000            144   _IP             DATA 0xb8
0000            145   _IPH            DATA 0xf2
0000            146   _IT01CF         DATA 0xe4
0000            147   _LFO0CN         DATA 0xb1
0000            148   _P0             DATA 0x80
0000            149   _P0MASK         DATA 0xfe
0000            150   _P0MAT          DATA 0xfd
0000            151   _P0MDIN         DATA 0xf1
0000            152   _P0MDOUT        DATA 0xa4
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1             DATA 0x90
0000            155   _P1MASK         DATA 0xee
0000            156   _P1MAT          DATA 0xed
0000            157   _P1MDIN         DATA 0xf2
0000            158   _P1MDOUT        DATA 0xa5
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2             DATA 0xa0
0000            161   _P2MASK         DATA 0xfc
0000            162   _P2MAT          DATA 0xfb
0000            163   _P2MDIN         DATA 0xf3
0000            164   _P2MDOUT        DATA 0xa6
0000            165   _P2SKIP         DATA 0xcc
0000            166   _P3             DATA 0xb0
0000            167   _P3MDIN         DATA 0xf4
0000            168   _P3MDOUT        DATA 0x9c
0000            169   _PCA0CENT       DATA 0x9e
0000            170   _PCA0CLR        DATA 0x9c
0000            171   _PCA0CN0        DATA 0xd8
0000            172   _PCA0CPH0       DATA 0xfc
0000            173   _PCA0CPH1       DATA 0xea
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPH3       DATA 0xf5
0000            176   _PCA0CPH4       DATA 0x85
0000            177   _PCA0CPH5       DATA 0xde
0000            178   _PCA0CPL0       DATA 0xfb
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPL2       DATA 0xeb
0000            181   _PCA0CPL3       DATA 0xf4
0000            182   _PCA0CPL4       DATA 0x84
0000            183   _PCA0CPL5       DATA 0xdd
0000            184   _PCA0CPM0       DATA 0xda
0000            185   _PCA0CPM1       DATA 0xdb
0000            186   _PCA0CPM2       DATA 0xdc
0000            187   _PCA0CPM3       DATA 0xae
0000            188   _PCA0CPM4       DATA 0xaf
0000            189   _PCA0CPM5       DATA 0xcc
0000            190   _PCA0H          DATA 0xfa
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0MD         DATA 0xd9
0000            193   _PCA0POL        DATA 0x96
0000            194   _PCA0PWM        DATA 0xf7
0000            195   _PCON0          DATA 0x87
0000            196   _PCON1          DATA 0xcd
0000            197   _PFE0CN         DATA 0xc1
0000            198   _PRTDRV         DATA 0xf6
0000            199   _PSCTL          DATA 0x8f
0000            200   _PSTAT0         DATA 0xaa
0000            201   _PSW            DATA 0xd0
0000            202   _REF0CN         DATA 0xd1
0000            203   _REG0CN         DATA 0xc9
0000            204   _REVID          DATA 0xb6
0000            205   _RSTSRC         DATA 0xef
0000            206   _SBCON1         DATA 0x94
0000            207   _SBRLH1         DATA 0x96
0000            208   _SBRLL1         DATA 0x95
0000            209   _SBUF           DATA 0x99
0000            210   _SBUF0          DATA 0x99
0000            211   _SBUF1          DATA 0x92
0000            212   _SCON           DATA 0x98
0000            213   _SCON0          DATA 0x98
0000            214   _SCON1          DATA 0xc8
0000            215   _SFRPAGE        DATA 0xa7
0000            216   _SFRPGCN        DATA 0xbc
0000            217   _SFRSTACK       DATA 0xd7
0000            218   _SMB0ADM        DATA 0xd6
0000            219   _SMB0ADR        DATA 0xd7
0000            220   _SMB0CF         DATA 0xc1
0000            221   _SMB0CN0        DATA 0xc0
0000            222   _SMB0DAT        DATA 0xc2
0000            223   _SMB0FCN0       DATA 0xc3
0000            224   _SMB0FCN1       DATA 0xc4
0000            225   _SMB0FCT        DATA 0xef
0000            226   _SMB0RXLN       DATA 0xc5
0000            227   _SMB0TC         DATA 0xac
0000            228   _SMOD1          DATA 0x93
0000            229   _SP             DATA 0x81
0000            230   _SPI0CFG        DATA 0xa1
0000            231   _SPI0CKR        DATA 0xa2
0000            232   _SPI0CN0        DATA 0xf8
0000            233   _SPI0DAT        DATA 0xa3
0000            234   _SPI0FCN0       DATA 0x9a
0000            235   _SPI0FCN1       DATA 0x9b
0000            236   _SPI0FCT        DATA 0xf7
0000            237   _SPI0PCF        DATA 0xdf
0000            238   _TCON           DATA 0x88
0000            239   _TH0            DATA 0x8c
0000            240   _TH1            DATA 0x8d
0000            241   _TL0            DATA 0x8a
0000            242   _TL1            DATA 0x8b
0000            243   _TMOD           DATA 0x89
0000            244   _TMR2CN0        DATA 0xc8
0000            245   _TMR2CN1        DATA 0xfd
0000            246   _TMR2H          DATA 0xcf
0000            247   _TMR2L          DATA 0xce
0000            248   _TMR2RLH        DATA 0xcb
0000            249   _TMR2RLL        DATA 0xca
0000            250   _TMR3CN0        DATA 0x91
0000            251   _TMR3CN1        DATA 0xfe
0000            252   _TMR3H          DATA 0x95
0000            253   _TMR3L          DATA 0x94
0000            254   _TMR3RLH        DATA 0x93
0000            255   _TMR3RLL        DATA 0x92
0000            256   _TMR4CN0        DATA 0x98
0000            257   _TMR4CN1        DATA 0xff
0000            258   _TMR4H          DATA 0xa5
0000            259   _TMR4L          DATA 0xa4
0000            260   _TMR4RLH        DATA 0xa3
0000            261   _TMR4RLL        DATA 0xa2
0000            262   _TMR5CN0        DATA 0xc0
0000            263   _TMR5CN1        DATA 0xf1
0000            264   _TMR5H          DATA 0xd5
0000            265   _TMR5L          DATA 0xd4
0000            266   _TMR5RLH        DATA 0xd3
0000            267   _TMR5RLL        DATA 0xd2
0000            268   _UART0PCF       DATA 0xd9
0000            269   _UART1FCN0      DATA 0x9d
0000            270   _UART1FCN1      DATA 0xd8
0000            271   _UART1FCT       DATA 0xfa
0000            272   _UART1LIN       DATA 0x9e
0000            273   _UART1PCF       DATA 0xda
0000            274   _VDM0CN         DATA 0xff
0000            275   _WDTCN          DATA 0x97
0000            276   _XBR0           DATA 0xe1
0000            277   _XBR1           DATA 0xe2
0000            278   _XBR2           DATA 0xe3
0000            279   _XOSC0CN        DATA 0x86
0000            280   _DPTR           DATA 0x8382
0000            281   _TMR2RL         DATA 0xcbca
0000            282   _TMR3RL         DATA 0x9392
0000            283   _TMR4RL         DATA 0xa3a2
0000            284   _TMR5RL         DATA 0xd3d2
0000            285   _TMR0           DATA 0x8c8a
0000            286   _TMR1           DATA 0x8d8b
0000            287   _TMR2           DATA 0xcfce
0000            288   _TMR3           DATA 0x9594
0000            289   _TMR4           DATA 0xa5a4
0000            290   _TMR5           DATA 0xd5d4
0000            291   _SBRL1          DATA 0x9695
0000            292   _PCA0           DATA 0xfaf9
0000            293   _PCA0CP0        DATA 0xfcfb
0000            294   _PCA0CP1        DATA 0xeae9
0000            295   _PCA0CP2        DATA 0xeceb
0000            296   _PCA0CP3        DATA 0xf5f4
0000            297   _PCA0CP4        DATA 0x8584
0000            298   _PCA0CP5        DATA 0xdedd
0000            299   _ADC0ASA        DATA 0xb6b5
0000            300   _ADC0GT         DATA 0xc4c3
0000            301   _ADC0           DATA 0xbebd
0000            302   _ADC0LT         DATA 0xc6c5
0000            303   _DAC0           DATA 0x8584
0000            304   _DAC1           DATA 0x8a89
0000            305   _DAC2           DATA 0x8c8b
0000            306   _DAC3           DATA 0x8e8d
0000            307   ;--------------------------------------------------------
0000            308   ; special function bits
0000            309   ;--------------------------------------------------------
0000            310   _ACC_0          BIT 0xe0
0000            311   _ACC_1          BIT 0xe1
0000            312   _ACC_2          BIT 0xe2
0000            313   _ACC_3          BIT 0xe3
0000            314   _ACC_4          BIT 0xe4
0000            315   _ACC_5          BIT 0xe5
0000            316   _ACC_6          BIT 0xe6
0000            317   _ACC_7          BIT 0xe7
0000            318   _TEMPE          BIT 0xe8
0000            319   _ADGN0          BIT 0xe9
0000            320   _ADGN1          BIT 0xea
0000            321   _ADWINT         BIT 0xeb
0000            322   _ADBUSY         BIT 0xec
0000            323   _ADINT          BIT 0xed
0000            324   _IPOEN          BIT 0xee
0000            325   _ADEN           BIT 0xef
0000            326   _B_0            BIT 0xf0
0000            327   _B_1            BIT 0xf1
0000            328   _B_2            BIT 0xf2
0000            329   _B_3            BIT 0xf3
0000            330   _B_4            BIT 0xf4
0000            331   _B_5            BIT 0xf5
0000            332   _B_6            BIT 0xf6
0000            333   _B_7            BIT 0xf7
0000            334   _C0FIF          BIT 0xe8
0000            335   _C0RIF          BIT 0xe9
0000            336   _C1FIF          BIT 0xea
0000            337   _C1RIF          BIT 0xeb
0000            338   _C2FIF          BIT 0xec
0000            339   _C2RIF          BIT 0xed
0000            340   _C3FIF          BIT 0xee
0000            341   _C3RIF          BIT 0xef
0000            342   _D1SRC0         BIT 0x88
0000            343   _D1SRC1         BIT 0x89
0000            344   _D1AMEN         BIT 0x8a
0000            345   _D01REFSL       BIT 0x8b
0000            346   _D3SRC0         BIT 0x8c
0000            347   _D3SRC1         BIT 0x8d
0000            348   _D3AMEN         BIT 0x8e
0000            349   _D23REFSL       BIT 0x8f
0000            350   _D0UDIS         BIT 0x98
0000            351   _D1UDIS         BIT 0x99
0000            352   _D2UDIS         BIT 0x9a
0000            353   _D3UDIS         BIT 0x9b
0000            354   _EX0            BIT 0xa8
0000            355   _ET0            BIT 0xa9
0000            356   _EX1            BIT 0xaa
0000            357   _ET1            BIT 0xab
0000            358   _ES0            BIT 0xac
0000            359   _ET2            BIT 0xad
0000            360   _ESPI0          BIT 0xae
0000            361   _EA             BIT 0xaf
0000            362   _PX0            BIT 0xb8
0000            363   _PT0            BIT 0xb9
0000            364   _PX1            BIT 0xba
0000            365   _PT1            BIT 0xbb
0000            366   _PS0            BIT 0xbc
0000            367   _PT2            BIT 0xbd
0000            368   _PSPI0          BIT 0xbe
0000            369   _P0_0           BIT 0x80
0000            370   _P0_1           BIT 0x81
0000            371   _P0_2           BIT 0x82
0000            372   _P0_3           BIT 0x83
0000            373   _P0_4           BIT 0x84
0000            374   _P0_5           BIT 0x85
0000            375   _P0_6           BIT 0x86
0000            376   _P0_7           BIT 0x87
0000            377   _P1_0           BIT 0x90
0000            378   _P1_1           BIT 0x91
0000            379   _P1_2           BIT 0x92
0000            380   _P1_3           BIT 0x93
0000            381   _P1_4           BIT 0x94
0000            382   _P1_5           BIT 0x95
0000            383   _P1_6           BIT 0x96
0000            384   _P1_7           BIT 0x97
0000            385   _P2_0           BIT 0xa0
0000            386   _P2_1           BIT 0xa1
0000            387   _P2_2           BIT 0xa2
0000            388   _P2_3           BIT 0xa3
0000            389   _P2_4           BIT 0xa4
0000            390   _P2_5           BIT 0xa5
0000            391   _P2_6           BIT 0xa6
0000            392   _P3_0           BIT 0xb0
0000            393   _P3_1           BIT 0xb1
0000            394   _P3_2           BIT 0xb2
0000            395   _P3_3           BIT 0xb3
0000            396   _P3_4           BIT 0xb4
0000            397   _P3_7           BIT 0xb7
0000            398   _CCF0           BIT 0xd8
0000            399   _CCF1           BIT 0xd9
0000            400   _CCF2           BIT 0xda
0000            401   _CCF3           BIT 0xdb
0000            402   _CCF4           BIT 0xdc
0000            403   _CCF5           BIT 0xdd
0000            404   _CR             BIT 0xde
0000            405   _CF             BIT 0xdf
0000            406   _PARITY         BIT 0xd0
0000            407   _F1             BIT 0xd1
0000            408   _OV             BIT 0xd2
0000            409   _RS0            BIT 0xd3
0000            410   _RS1            BIT 0xd4
0000            411   _F0             BIT 0xd5
0000            412   _AC             BIT 0xd6
0000            413   _CY             BIT 0xd7
0000            414   _RI             BIT 0x98
0000            415   _TI             BIT 0x99
0000            416   _RB8            BIT 0x9a
0000            417   _TB8            BIT 0x9b
0000            418   _REN            BIT 0x9c
0000            419   _CE             BIT 0x9d
0000            420   _SMODE          BIT 0x9e
0000            421   _RI1            BIT 0xc8
0000            422   _TI1            BIT 0xc9
0000            423   _RBX1           BIT 0xca
0000            424   _TBX1           BIT 0xcb
0000            425   _REN1           BIT 0xcc
0000            426   _PERR1          BIT 0xcd
0000            427   _OVR1           BIT 0xce
0000            428   _SI             BIT 0xc0
0000            429   _ACK            BIT 0xc1
0000            430   _ARBLOST        BIT 0xc2
0000            431   _ACKRQ          BIT 0xc3
0000            432   _STO            BIT 0xc4
0000            433   _STA            BIT 0xc5
0000            434   _TXMODE         BIT 0xc6
0000            435   _MASTER         BIT 0xc7
0000            436   _SPIEN          BIT 0xf8
0000            437   _TXNF           BIT 0xf9
0000            438   _NSSMD0         BIT 0xfa
0000            439   _NSSMD1         BIT 0xfb
0000            440   _RXOVRN         BIT 0xfc
0000            441   _MODF           BIT 0xfd
0000            442   _WCOL           BIT 0xfe
0000            443   _SPIF           BIT 0xff
0000            444   _IT0            BIT 0x88
0000            445   _IE0            BIT 0x89
0000            446   _IT1            BIT 0x8a
0000            447   _IE1            BIT 0x8b
0000            448   _TR0            BIT 0x8c
0000            449   _TF0            BIT 0x8d
0000            450   _TR1            BIT 0x8e
0000            451   _TF1            BIT 0x8f
0000            452   _T2XCLK0        BIT 0xc8
0000            453   _T2XCLK1        BIT 0xc9
0000            454   _TR2            BIT 0xca
0000            455   _T2SPLIT        BIT 0xcb
0000            456   _TF2CEN         BIT 0xcc
0000            457   _TF2LEN         BIT 0xcd
0000            458   _TF2L           BIT 0xce
0000            459   _TF2H           BIT 0xcf
0000            460   _T4XCLK0        BIT 0x98
0000            461   _T4XCLK1        BIT 0x99
0000            462   _TR4            BIT 0x9a
0000            463   _T4SPLIT        BIT 0x9b
0000            464   _TF4CEN         BIT 0x9c
0000            465   _TF4LEN         BIT 0x9d
0000            466   _TF4L           BIT 0x9e
0000            467   _TF4H           BIT 0x9f
0000            468   _T5XCLK0        BIT 0xc0
0000            469   _T5XCLK1        BIT 0xc1
0000            470   _TR5            BIT 0xc2
0000            471   _T5SPLIT        BIT 0xc3
0000            472   _TF5CEN         BIT 0xc4
0000            473   _TF5LEN         BIT 0xc5
0000            474   _TF5L           BIT 0xc6
0000            475   _TF5H           BIT 0xc7
0000            476   _RIE            BIT 0xd8
0000            477   _RXTO0          BIT 0xd9
0000            478   _RXTO1          BIT 0xda
0000            479   _RFRQ           BIT 0xdb
0000            480   _TIE            BIT 0xdc
0000            481   _TXHOLD         BIT 0xdd
0000            482   _TXNF1          BIT 0xde
0000            483   _TFRQ           BIT 0xdf
0000            484   ;--------------------------------------------------------
0000            485   ; overlayable register banks
0000            486   ;--------------------------------------------------------
0000            487            rbank0 segment data overlay
0000            488   ;--------------------------------------------------------
0000            489   ; internal ram data
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DSEG
0000            492   _overflow_count:
0000            493            ds 1
0001            494   _LCDprint_PARM_2:
0001            495            ds 1
0002            496   _getsn_PARM_2:
0002            497            ds 2
0004            498   _getsn_buff_1_46:
0004            499            ds 3
0007            500   _getsn_sloc0_1_0:
0007            501            ds 2
0009            502   _buffer:
0009            503            ds 17
001A            504   ;--------------------------------------------------------
001A            505   ; overlayable items in internal ram 
001A            506   ;--------------------------------------------------------
0000            507            rseg    R_OSEG
0000            508   ;--------------------------------------------------------
0000            509   ; indirectly addressable internal ram data
0000            510   ;--------------------------------------------------------
0000            511            rseg R_ISEG
0000            512   ;--------------------------------------------------------
0000            513   ; absolute internal ram data
0000            514   ;--------------------------------------------------------
0000            515            DSEG
0000            516   ;--------------------------------------------------------
0000            517   ; bit data
0000            518   ;--------------------------------------------------------
0000            519            rseg R_BSEG
0000            520   _LCDprint_PARM_3:
0000            521            DBIT    1
0001            522   ;--------------------------------------------------------
0001            523   ; paged external ram data
0001            524   ;--------------------------------------------------------
0000            525            rseg R_PSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_XSEG
0000            530   ;--------------------------------------------------------
0000            531   ; absolute external ram data
0000            532   ;--------------------------------------------------------
0000            533            XSEG
0000            534   ;--------------------------------------------------------
0000            535   ; external initialized ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_IXSEG
0000            538            rseg R_HOME
0000            539            rseg R_GSINIT
0000            540            rseg R_CSEG
0000            541   ;--------------------------------------------------------
0000            542   ; Reset entry point and interrupt vectors
0000            543   ;--------------------------------------------------------
0000            544            CSEG at 0x0000
0000 020000     545            ljmp    _crt0
0003            546   ;--------------------------------------------------------
0003            547   ; global & static initialisations
0003            548   ;--------------------------------------------------------
0000            549            rseg R_HOME
0000            550            rseg R_GSINIT
0000            551            rseg R_GSINIT
0000            552   ;--------------------------------------------------------
0000            553   ; data variables initialization
0000            554   ;--------------------------------------------------------
0000            555            rseg R_DINIT
0000            556            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            557   ;--------------------------------------------------------
0000            558   ; code
0000            559   ;--------------------------------------------------------
0000            560            rseg R_CSEG
0000            561   ;------------------------------------------------------------
0000            562   ;Allocation info for local variables in function '_c51_external_startup'
0000            563   ;------------------------------------------------------------
0000            564   ;------------------------------------------------------------
0000            565   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:26: char _c51_external_startup (void)
0000            566   ;        -----------------------------------------
0000            567   ;         function _c51_external_startup
0000            568   ;        -----------------------------------------
0000            569   __c51_external_startup:
0000            570            using   0
0000            571   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:29: SFRPAGE = 0x00;
0000 75A700     572            mov     _SFRPAGE,#0x00
0003            573   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:30: WDTCN = 0xDE; //First key
0003 7597DE     574            mov     _WDTCN,#0xDE
0006            575   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:31: WDTCN = 0xAD; //Second key
0006 7597AD     576            mov     _WDTCN,#0xAD
0009            577   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:33: VDM0CN |= 0x80;
0009 43FF80     578            orl     _VDM0CN,#0x80
000C            579   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:34: RSTSRC = 0x02;
000C 75EF02     580            mov     _RSTSRC,#0x02
000F            581   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:41: SFRPAGE = 0x10;
000F 75A710     582            mov     _SFRPAGE,#0x10
0012            583   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:42: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     584            mov     _PFE0CN,#0x20
0015            585   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:43: SFRPAGE = 0x00;
0015 75A700     586            mov     _SFRPAGE,#0x00
0018            587   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:64: CLKSEL = 0x00;
0018 75A900     588            mov     _CLKSEL,#0x00
001B            589   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:65: CLKSEL = 0x00;
001B 75A900     590            mov     _CLKSEL,#0x00
001E            591   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:66: while ((CLKSEL & 0x80) == 0);
001E            592   L002001?:
001E E5A9       593            mov     a,_CLKSEL
0020 30E7C8     594            jnb     acc.7,L002001?
0023            595   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:67: CLKSEL = 0x03;
0023 75A903     596            mov     _CLKSEL,#0x03
0026            597   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:68: CLKSEL = 0x03;
0026 75A903     598            mov     _CLKSEL,#0x03
0029            599   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:69: while ((CLKSEL & 0x80) == 0);
0029            600   L002004?:
0029 E5A9       601            mov     a,_CLKSEL
002B 30E748     602            jnb     acc.7,L002004?
002E            603   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:74: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     604            orl     _P0MDOUT,#0x10
0031            605   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:75: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     606            mov     _XBR0,#0x01
0034            607   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:76: XBR1     = 0X10; // Enable T0 on P0.0
0034 75E210     608            mov     _XBR1,#0x10
0037            609   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:77: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     610            mov     _XBR2,#0x40
003A            611   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:83: SCON0 = 0x10;
003A 759810     612            mov     _SCON0,#0x10
003D            613   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:84: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     614            mov     _CKCON0,_CKCON0
0040            615   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:85: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     616            mov     _TH1,#0xE6
0043            617   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:86: TL1 = TH1;      // Init Timer1
0043 858D8B     618            mov     _TL1,_TH1
0046            619   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:87: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     620            anl     _TMOD,#0x0F
0049            621   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:88: TMOD |=  0x20;                       
0049 438920     622            orl     _TMOD,#0x20
004C            623   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:89: TR1 = 1; // START Timer1
004C D28E       624            setb    _TR1
004E            625   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:90: TI = 1;  // Indicate TX0 ready
004E D299       626            setb    _TI
0050            627   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:92: return 0;
0050 758200     628            mov     dpl,#0x00
0053 22         629            ret
0054            630   ;------------------------------------------------------------
0054            631   ;Allocation info for local variables in function 'Timer3us'
0054            632   ;------------------------------------------------------------
0054            633   ;us                        Allocated to registers r2 
0054            634   ;i                         Allocated to registers r3 
0054            635   ;------------------------------------------------------------
0054            636   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:96: void Timer3us(unsigned char us)
0054            637   ;        -----------------------------------------
0054            638   ;         function Timer3us
0054            639   ;        -----------------------------------------
0054            640   _Timer3us:
0054 AA82       641            mov     r2,dpl
0056            642   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:101: CKCON0|=0b_0100_0000;
0056 438E40     643            orl     _CKCON0,#0x40
0059            644   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:103: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     645            mov     _TMR3RL,#0xB8
005C 7593FF     646            mov     (_TMR3RL >> 8),#0xFF
005F            647   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:104: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005F 859294     648            mov     _TMR3,_TMR3RL
0062 859395     649            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            650   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:106: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0065 759104     651            mov     _TMR3CN0,#0x04
0068            652   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0068 7B00       653            mov     r3,#0x00
006A            654   L003006?:
006A C3         655            clr     c
006B EB         656            mov     a,r3
006C 9A         657            subb    a,r2
006D 5000       658            jnc     L003009?
006F            659   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:109: while (!(TMR3CN0 & 0x80));  // Wait for overflow
006F            660   L003001?:
006F E591       661            mov     a,_TMR3CN0
0071 30E748     662            jnb     acc.7,L003001?
0074            663   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:110: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0074 53917F     664            anl     _TMR3CN0,#0x7F
0077            665   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:111: if (TF0)
0077            666   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:113: TF0=0;
0077 108D88     667            jbc     _TF0,L003019?
007A 8000       668            sjmp    L003008?
007C            669   L003019?:
007C            670   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:114: overflow_count++;
007C 05E0       671            inc     _overflow_count
007E            672   L003008?:
007E            673   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
007E 0B         674            inc     r3
007F 8000       675            sjmp    L003006?
0081            676   L003009?:
0081            677   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:117: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0081 759100     678            mov     _TMR3CN0,#0x00
0084 22         679            ret
0085            680   ;------------------------------------------------------------
0085            681   ;Allocation info for local variables in function 'waitms'
0085            682   ;------------------------------------------------------------
0085            683   ;ms                        Allocated to registers r2 r3 
0085            684   ;j                         Allocated to registers r2 r3 
0085            685   ;------------------------------------------------------------
0085            686   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:120: void waitms (unsigned int ms)
0085            687   ;        -----------------------------------------
0085            688   ;         function waitms
0085            689   ;        -----------------------------------------
0085            690   _waitms:
0085 AA82       691            mov     r2,dpl
0087 AB83       692            mov     r3,dph
0089            693   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:123: for(j=ms; j!=0; j--)
0089            694   L004001?:
0089 BA0088     695            cjne    r2,#0x00,L004010?
008C BB0088     696            cjne    r3,#0x00,L004010?
008F 22         697            ret
0090            698   L004010?:
0090            699   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:125: Timer3us(249);
0090 7582F9     700            mov     dpl,#0xF9
0093 C002       701            push    ar2
0095 C003       702            push    ar3
0097 120000     703            lcall   _Timer3us
009A            704   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:126: Timer3us(249);
009A 7582F9     705            mov     dpl,#0xF9
009D 120000     706            lcall   _Timer3us
00A0            707   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:127: Timer3us(249);
00A0 7582F9     708            mov     dpl,#0xF9
00A3 120000     709            lcall   _Timer3us
00A6            710   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:128: Timer3us(250);
00A6 7582FA     711            mov     dpl,#0xFA
00A9 120000     712            lcall   _Timer3us
00AC D003       713            pop     ar3
00AE D002       714            pop     ar2
00B0            715   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:123: for(j=ms; j!=0; j--)
00B0 1A         716            dec     r2
00B1 BAFFC8     717            cjne    r2,#0xff,L004011?
00B4 1B         718            dec     r3
00B5            719   L004011?:
00B5 8000       720            sjmp    L004001?
00B7            721   ;------------------------------------------------------------
00B7            722   ;Allocation info for local variables in function 'TIMER0_Init'
00B7            723   ;------------------------------------------------------------
00B7            724   ;------------------------------------------------------------
00B7            725   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:132: void TIMER0_Init(void)
00B7            726   ;        -----------------------------------------
00B7            727   ;         function TIMER0_Init
00B7            728   ;        -----------------------------------------
00B7            729   _TIMER0_Init:
00B7            730   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:134: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00B7 5389F0     731            anl     _TMOD,#0xF0
00BA            732   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:135: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
00BA 438905     733            orl     _TMOD,#0x05
00BD            734   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:136: TR0=0; // Stop Timer/Counter 0
00BD C28C       735            clr     _TR0
00BF 22         736            ret
00C0            737   ;------------------------------------------------------------
00C0            738   ;Allocation info for local variables in function 'LCD_pulse'
00C0            739   ;------------------------------------------------------------
00C0            740   ;------------------------------------------------------------
00C0            741   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:138: void LCD_pulse (void)
00C0            742   ;        -----------------------------------------
00C0            743   ;         function LCD_pulse
00C0            744   ;        -----------------------------------------
00C0            745   _LCD_pulse:
00C0            746   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:140: LCD_E=1;
00C0 D2A0       747            setb    _P2_0
00C2            748   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:141: Timer3us(40);
00C2 758228     749            mov     dpl,#0x28
00C5 120000     750            lcall   _Timer3us
00C8            751   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:142: LCD_E=0;
00C8 C2A0       752            clr     _P2_0
00CA 22         753            ret
00CB            754   ;------------------------------------------------------------
00CB            755   ;Allocation info for local variables in function 'LCD_byte'
00CB            756   ;------------------------------------------------------------
00CB            757   ;x                         Allocated to registers r2 
00CB            758   ;------------------------------------------------------------
00CB            759   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:145: void LCD_byte (unsigned char x)
00CB            760   ;        -----------------------------------------
00CB            761   ;         function LCD_byte
00CB            762   ;        -----------------------------------------
00CB            763   _LCD_byte:
00CB AA82       764            mov     r2,dpl
00CD            765   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:148: ACC=x; //Send high nible
00CD 8AE0       766            mov     _ACC,r2
00CF            767   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:149: LCD_D7=ACC_7;
00CF A2E7       768            mov     c,_ACC_7
00D1 9290       769            mov     _P1_0,c
00D3            770   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:150: LCD_D6=ACC_6;
00D3 A2E6       771            mov     c,_ACC_6
00D5 9291       772            mov     _P1_1,c
00D7            773   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:151: LCD_D5=ACC_5;
00D7 A2E5       774            mov     c,_ACC_5
00D9 9292       775            mov     _P1_2,c
00DB            776   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:152: LCD_D4=ACC_4;
00DB A2E4       777            mov     c,_ACC_4
00DD 9293       778            mov     _P1_3,c
00DF            779   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:153: LCD_pulse();
00DF C002       780            push    ar2
00E1 120000     781            lcall   _LCD_pulse
00E4            782   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:154: Timer3us(40);
00E4 758228     783            mov     dpl,#0x28
00E7 120000     784            lcall   _Timer3us
00EA D002       785            pop     ar2
00EC            786   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:155: ACC=x; //Send low nible
00EC 8AE0       787            mov     _ACC,r2
00EE            788   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:156: LCD_D7=ACC_3;
00EE A2E3       789            mov     c,_ACC_3
00F0 9290       790            mov     _P1_0,c
00F2            791   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:157: LCD_D6=ACC_2;
00F2 A2E2       792            mov     c,_ACC_2
00F4 9291       793            mov     _P1_1,c
00F6            794   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:158: LCD_D5=ACC_1;
00F6 A2E1       795            mov     c,_ACC_1
00F8 9292       796            mov     _P1_2,c
00FA            797   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:159: LCD_D4=ACC_0;
00FA A2E0       798            mov     c,_ACC_0
00FC 9293       799            mov     _P1_3,c
00FE            800   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:160: LCD_pulse();
00FE 020000     801            ljmp    _LCD_pulse
0101            802   ;------------------------------------------------------------
0101            803   ;Allocation info for local variables in function 'WriteData'
0101            804   ;------------------------------------------------------------
0101            805   ;x                         Allocated to registers r2 
0101            806   ;------------------------------------------------------------
0101            807   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:163: void WriteData (unsigned char x)
0101            808   ;        -----------------------------------------
0101            809   ;         function WriteData
0101            810   ;        -----------------------------------------
0101            811   _WriteData:
0101 AA82       812            mov     r2,dpl
0103            813   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:165: LCD_RS=1;
0103 D297       814            setb    _P1_7
0105            815   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:166: LCD_byte(x);
0105 8A82       816            mov     dpl,r2
0107 120000     817            lcall   _LCD_byte
010A            818   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:167: waitms(2);
010A 900002     819            mov     dptr,#0x0002
010D 020000     820            ljmp    _waitms
0110            821   ;------------------------------------------------------------
0110            822   ;Allocation info for local variables in function 'WriteCommand'
0110            823   ;------------------------------------------------------------
0110            824   ;x                         Allocated to registers r2 
0110            825   ;------------------------------------------------------------
0110            826   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:170: void WriteCommand (unsigned char x)
0110            827   ;        -----------------------------------------
0110            828   ;         function WriteCommand
0110            829   ;        -----------------------------------------
0110            830   _WriteCommand:
0110 AA82       831            mov     r2,dpl
0112            832   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:172: LCD_RS=0;
0112 C297       833            clr     _P1_7
0114            834   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:173: LCD_byte(x);
0114 8A82       835            mov     dpl,r2
0116 120000     836            lcall   _LCD_byte
0119            837   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:174: waitms(5);
0119 900005     838            mov     dptr,#0x0005
011C 020000     839            ljmp    _waitms
011F            840   ;------------------------------------------------------------
011F            841   ;Allocation info for local variables in function 'LCD_4BIT'
011F            842   ;------------------------------------------------------------
011F            843   ;------------------------------------------------------------
011F            844   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:177: void LCD_4BIT (void)
011F            845   ;        -----------------------------------------
011F            846   ;         function LCD_4BIT
011F            847   ;        -----------------------------------------
011F            848   _LCD_4BIT:
011F            849   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:179: LCD_E=0; // Resting state of LCD's enable is zero
011F C2A0       850            clr     _P2_0
0121            851   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:181: waitms(20);
0121 900014     852            mov     dptr,#0x0014
0124 120000     853            lcall   _waitms
0127            854   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:183: WriteCommand(0x33);
0127 758233     855            mov     dpl,#0x33
012A 120000     856            lcall   _WriteCommand
012D            857   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:184: WriteCommand(0x33);
012D 758233     858            mov     dpl,#0x33
0130 120000     859            lcall   _WriteCommand
0133            860   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:185: WriteCommand(0x32); // Change to 4-bit mode
0133 758232     861            mov     dpl,#0x32
0136 120000     862            lcall   _WriteCommand
0139            863   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:188: WriteCommand(0x28);
0139 758228     864            mov     dpl,#0x28
013C 120000     865            lcall   _WriteCommand
013F            866   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:189: WriteCommand(0x0c);
013F 75820C     867            mov     dpl,#0x0C
0142 120000     868            lcall   _WriteCommand
0145            869   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:190: WriteCommand(0x01); // Clear screen command (takes some time)
0145 758201     870            mov     dpl,#0x01
0148 120000     871            lcall   _WriteCommand
014B            872   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:191: waitms(20); // Wait for clear screen command to finsih.
014B 900014     873            mov     dptr,#0x0014
014E 020000     874            ljmp    _waitms
0151            875   ;------------------------------------------------------------
0151            876   ;Allocation info for local variables in function 'LCDprint'
0151            877   ;------------------------------------------------------------
0151            878   ;line                      Allocated with name '_LCDprint_PARM_2'
0151            879   ;string                    Allocated to registers r2 r3 r4 
0151            880   ;j                         Allocated to registers r5 r6 
0151            881   ;------------------------------------------------------------
0151            882   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:194: void LCDprint(char * string, unsigned char line, bit clear)
0151            883   ;        -----------------------------------------
0151            884   ;         function LCDprint
0151            885   ;        -----------------------------------------
0151            886   _LCDprint:
0151 AA82       887            mov     r2,dpl
0153 AB83       888            mov     r3,dph
0155 ACF0       889            mov     r4,b
0157            890   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:198: WriteCommand(line==2?0xc0:0x80);
0157 7402       891            mov     a,#0x02
0159 B5A048     892            cjne    a,_LCDprint_PARM_2,L011013?
015C 7DC0       893            mov     r5,#0xC0
015E 8000       894            sjmp    L011014?
0160            895   L011013?:
0160 7D80       896            mov     r5,#0x80
0162            897   L011014?:
0162 8D82       898            mov     dpl,r5
0164 C002       899            push    ar2
0166 C003       900            push    ar3
0168 C004       901            push    ar4
016A 120000     902            lcall   _WriteCommand
016D            903   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:199: waitms(5);
016D 900005     904            mov     dptr,#0x0005
0170 120000     905            lcall   _waitms
0173 D004       906            pop     ar4
0175 D003       907            pop     ar3
0177 D002       908            pop     ar2
0179            909   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:200: for(j=0; string[j]!=0; j++)   WriteData(string[j]);// Write the message
0179 7D00       910            mov     r5,#0x00
017B 7E00       911            mov     r6,#0x00
017D            912   L011003?:
017D ED         913            mov     a,r5
017E 2A         914            add     a,r2
017F FF         915            mov     r7,a
0180 EE         916            mov     a,r6
0181 3B         917            addc    a,r3
0182 F8         918            mov     r0,a
0183 8C01       919            mov     ar1,r4
0185 8F82       920            mov     dpl,r7
0187 8883       921            mov     dph,r0
0189 89F0       922            mov     b,r1
018B 120000     923            lcall   __gptrget
018E FF         924            mov     r7,a
018F 6000       925            jz      L011006?
0191 8F82       926            mov     dpl,r7
0193 C002       927            push    ar2
0195 C003       928            push    ar3
0197 C004       929            push    ar4
0199 C005       930            push    ar5
019B C006       931            push    ar6
019D 120000     932            lcall   _WriteData
01A0 D006       933            pop     ar6
01A2 D005       934            pop     ar5
01A4 D004       935            pop     ar4
01A6 D003       936            pop     ar3
01A8 D002       937            pop     ar2
01AA 0D         938            inc     r5
01AB BD00C8     939            cjne    r5,#0x00,L011003?
01AE 0E         940            inc     r6
01AF 8000       941            sjmp    L011003?
01B1            942   L011006?:
01B1            943   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:201: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01B1 30D088     944            jnb     _LCDprint_PARM_3,L011011?
01B4 8D02       945            mov     ar2,r5
01B6 8E03       946            mov     ar3,r6
01B8            947   L011007?:
01B8 C3         948            clr     c
01B9 EA         949            mov     a,r2
01BA 9410       950            subb    a,#0x10
01BC EB         951            mov     a,r3
01BD 6480       952            xrl     a,#0x80
01BF 9480       953            subb    a,#0x80
01C1 5000       954            jnc     L011011?
01C3 758220     955            mov     dpl,#0x20
01C6 C002       956            push    ar2
01C8 C003       957            push    ar3
01CA 120000     958            lcall   _WriteData
01CD D003       959            pop     ar3
01CF D002       960            pop     ar2
01D1 0A         961            inc     r2
01D2 BA00C8     962            cjne    r2,#0x00,L011007?
01D5 0B         963            inc     r3
01D6 8000       964            sjmp    L011007?
01D8            965   L011011?:
01D8 22         966            ret
01D9            967   ;------------------------------------------------------------
01D9            968   ;Allocation info for local variables in function 'getsn'
01D9            969   ;------------------------------------------------------------
01D9            970   ;len                       Allocated with name '_getsn_PARM_2'
01D9            971   ;buff                      Allocated with name '_getsn_buff_1_46'
01D9            972   ;j                         Allocated with name '_getsn_sloc0_1_0'
01D9            973   ;c                         Allocated to registers r3 
01D9            974   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01D9            975   ;------------------------------------------------------------
01D9            976   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:204: int getsn (char * buff, int len)
01D9            977   ;        -----------------------------------------
01D9            978   ;         function getsn
01D9            979   ;        -----------------------------------------
01D9            980   _getsn:
01D9 8582F8     981            mov     _getsn_buff_1_46,dpl
01DC 8583F9     982            mov     (_getsn_buff_1_46 + 1),dph
01DF 85F0FA     983            mov     (_getsn_buff_1_46 + 2),b
01E2            984   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:209: for(j=0; j<(len-1); j++)
01E2 E4         985            clr     a
01E3 F548       986            mov     _getsn_sloc0_1_0,a
01E5 F549       987            mov     (_getsn_sloc0_1_0 + 1),a
01E7 E550       988            mov     a,_getsn_PARM_2
01E9 24FF       989            add     a,#0xff
01EB FF         990            mov     r7,a
01EC E551       991            mov     a,(_getsn_PARM_2 + 1)
01EE 34FF       992            addc    a,#0xff
01F0 F8         993            mov     r0,a
01F1 7900       994            mov     r1,#0x00
01F3 7A00       995            mov     r2,#0x00
01F5            996   L012005?:
01F5 C3         997            clr     c
01F6 E9         998            mov     a,r1
01F7 9F         999            subb    a,r7
01F8 EA        1000            mov     a,r2
01F9 6480      1001            xrl     a,#0x80
01FB 88F0      1002            mov     b,r0
01FD 63F080    1003            xrl     b,#0x80
0200 95F0      1004            subb    a,b
0202 5000      1005            jnc     L012008?
0204           1006   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:211: c=getchar();
0204 C002      1007            push    ar2
0206 C007      1008            push    ar7
0208 C000      1009            push    ar0
020A C001      1010            push    ar1
020C 120000    1011            lcall   _getchar
020F AB82      1012            mov     r3,dpl
0211 D001      1013            pop     ar1
0213 D000      1014            pop     ar0
0215 D007      1015            pop     ar7
0217 D002      1016            pop     ar2
0219           1017   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:212: if ( (c=='\n') || (c=='\r') )
0219 BB0AC8    1018            cjne    r3,#0x0A,L012015?
021C 8000      1019            sjmp    L012001?
021E           1020   L012015?:
021E BB0D48    1021            cjne    r3,#0x0D,L012002?
0221           1022   L012001?:
0221           1023   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:214: buff[j]=0;
0221 E548      1024            mov     a,_getsn_sloc0_1_0
0223 25F8      1025            add     a,_getsn_buff_1_46
0225 FC        1026            mov     r4,a
0226 E549      1027            mov     a,(_getsn_sloc0_1_0 + 1)
0228 35F9      1028            addc    a,(_getsn_buff_1_46 + 1)
022A FD        1029            mov     r5,a
022B AEFA      1030            mov     r6,(_getsn_buff_1_46 + 2)
022D 8C82      1031            mov     dpl,r4
022F 8D83      1032            mov     dph,r5
0231 8EF0      1033            mov     b,r6
0233 E4        1034            clr     a
0234 120000    1035            lcall   __gptrput
0237           1036   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:215: return j;
0237 854882    1037            mov     dpl,_getsn_sloc0_1_0
023A 854983    1038            mov     dph,(_getsn_sloc0_1_0 + 1)
023D 22        1039            ret
023E           1040   L012002?:
023E           1041   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:219: buff[j]=c;
023E E9        1042            mov     a,r1
023F 25F8      1043            add     a,_getsn_buff_1_46
0241 FC        1044            mov     r4,a
0242 EA        1045            mov     a,r2
0243 35F9      1046            addc    a,(_getsn_buff_1_46 + 1)
0245 FD        1047            mov     r5,a
0246 AEFA      1048            mov     r6,(_getsn_buff_1_46 + 2)
0248 8C82      1049            mov     dpl,r4
024A 8D83      1050            mov     dph,r5
024C 8EF0      1051            mov     b,r6
024E EB        1052            mov     a,r3
024F 120000    1053            lcall   __gptrput
0252           1054   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:209: for(j=0; j<(len-1); j++)
0252 09        1055            inc     r1
0253 B900C8    1056            cjne    r1,#0x00,L012018?
0256 0A        1057            inc     r2
0257           1058   L012018?:
0257 8948      1059            mov     _getsn_sloc0_1_0,r1
0259 8A49      1060            mov     (_getsn_sloc0_1_0 + 1),r2
025B 8000      1061            sjmp    L012005?
025D           1062   L012008?:
025D           1063   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:222: buff[j]=0;
025D E548      1064            mov     a,_getsn_sloc0_1_0
025F 25F8      1065            add     a,_getsn_buff_1_46
0261 FA        1066            mov     r2,a
0262 E549      1067            mov     a,(_getsn_sloc0_1_0 + 1)
0264 35F9      1068            addc    a,(_getsn_buff_1_46 + 1)
0266 FB        1069            mov     r3,a
0267 ACFA      1070            mov     r4,(_getsn_buff_1_46 + 2)
0269 8A82      1071            mov     dpl,r2
026B 8B83      1072            mov     dph,r3
026D 8CF0      1073            mov     b,r4
026F E4        1074            clr     a
0270 120000    1075            lcall   __gptrput
0273           1076   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:223: return len;
0273 855082    1077            mov     dpl,_getsn_PARM_2
0276 855183    1078            mov     dph,(_getsn_PARM_2 + 1)
0279 22        1079            ret
027A           1080   ;------------------------------------------------------------
027A           1081   ;Allocation info for local variables in function 'main'
027A           1082   ;------------------------------------------------------------
027A           1083   ;F                         Allocated to registers r2 r3 r4 r5 
027A           1084   ;C                         Allocated to registers r6 r7 r0 r1 
027A           1085   ;b1tog                     Allocated to registers 
027A           1086   ;------------------------------------------------------------
027A           1087   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:227: void main (void) 
027A           1088   ;        -----------------------------------------
027A           1089   ;         function main
027A           1090   ;        -----------------------------------------
027A           1091   _main:
027A           1092   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:234: TIMER0_Init();
027A 120000    1093            lcall   _TIMER0_Init
027D           1094   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:236: waitms(500); // Give PuTTY a chance to start.
027D 9001F4    1095            mov     dptr,#0x01F4
0280 120000    1096            lcall   _waitms
0283           1097   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:237: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0283 7408      1098            mov     a,#__str_0
0285 C0E0      1099            push    acc
0287 74BB      1100            mov     a,#(__str_0 >> 8)
0289 C0E0      1101            push    acc
028B 7480      1102            mov     a,#0x80
028D C0E0      1103            push    acc
028F 120000    1104            lcall   _printf
0292 1581      1105            dec     sp
0294 1581      1106            dec     sp
0296 1581      1107            dec     sp
0298           1108   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:242: __FILE__, __DATE__, __TIME__);
0298           1109   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:241: "Compiled: %s, %s\n\n",
0298 74C8      1110            mov     a,#__str_4
029A C0E0      1111            push    acc
029C 74BB      1112            mov     a,#(__str_4 >> 8)
029E C0E0      1113            push    acc
02A0 7480      1114            mov     a,#0x80
02A2 C0E0      1115            push    acc
02A4 7408      1116            mov     a,#__str_3
02A6 C0E0      1117            push    acc
02A8 74BC      1118            mov     a,#(__str_3 >> 8)
02AA C0E0      1119            push    acc
02AC 7480      1120            mov     a,#0x80
02AE C0E0      1121            push    acc
02B0 7448      1122            mov     a,#__str_2
02B2 C0E0      1123            push    acc
02B4 74BC      1124            mov     a,#(__str_2 >> 8)
02B6 C0E0      1125            push    acc
02B8 7480      1126            mov     a,#0x80
02BA C0E0      1127            push    acc
02BC 7488      1128            mov     a,#__str_1
02BE C0E0      1129            push    acc
02C0 74BC      1130            mov     a,#(__str_1 >> 8)
02C2 C0E0      1131            push    acc
02C4 7480      1132            mov     a,#0x80
02C6 C0E0      1133            push    acc
02C8 120000    1134            lcall   _printf
02CB E581      1135            mov     a,sp
02CD 24F4      1136            add     a,#0xf4
02CF F581      1137            mov     sp,a
02D1           1138   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:244: LCD_4BIT();
02D1 120000    1139            lcall   _LCD_4BIT
02D4           1140   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:245: LCDprint("Cap in microF   ", 1, 1);
02D4 75A001    1141            mov     _LCDprint_PARM_2,#0x01
02D7 D2D0      1142            setb    _LCDprint_PARM_3
02D9 90BCC8    1143            mov     dptr,#__str_5
02DC 75F080    1144            mov     b,#0x80
02DF 120000    1145            lcall   _LCDprint
02E2           1146   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:247: while(1)
02E2           1147   L013007?:
02E2           1148   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:249: TL0=0;
02E2 758A00    1149            mov     _TL0,#0x00
02E5           1150   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:250: TH0=0;
02E5 758C00    1151            mov     _TH0,#0x00
02E8           1152   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:251: overflow_count=0;
02E8 75E000    1153            mov     _overflow_count,#0x00
02EB           1154   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:252: TF0=0;
02EB C28D      1155            clr     _TF0
02ED           1156   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:253: TR0=1; // Start Timer/Counter 0
02ED D28C      1157            setb    _TR0
02EF           1158   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:254: waitms(1000);
02EF 9003E8    1159            mov     dptr,#0x03E8
02F2 120000    1160            lcall   _waitms
02F5           1161   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:255: TR0=0; // Stop Timer/Counter 0
02F5 C28C      1162            clr     _TR0
02F7           1163   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:256: F=overflow_count*0x10000L+TH0*0x100L+TL0;
02F7 AAE0      1164            mov     r2,_overflow_count
02F9 7B00      1165            mov     r3,#0x00
02FB 8B05      1166            mov     ar5,r3
02FD 8A04      1167            mov     ar4,r2
02FF 7B00      1168            mov     r3,#0x00
0301 7A00      1169            mov     r2,#0x00
0303 AE8C      1170            mov     r6,_TH0
0305 7F00      1171            mov     r7,#0x00
0307 7800      1172            mov     r0,#0x00
0309 8801      1173            mov     ar1,r0
030B 8F00      1174            mov     ar0,r7
030D 8E07      1175            mov     ar7,r6
030F E4        1176            clr     a
0310 2A        1177            add     a,r2
0311 FA        1178            mov     r2,a
0312 EF        1179            mov     a,r7
0313 3B        1180            addc    a,r3
0314 FB        1181            mov     r3,a
0315 E8        1182            mov     a,r0
0316 3C        1183            addc    a,r4
0317 FC        1184            mov     r4,a
0318 E9        1185            mov     a,r1
0319 3D        1186            addc    a,r5
031A FD        1187            mov     r5,a
031B AE8A      1188            mov     r6,_TL0
031D E4        1189            clr     a
031E FF        1190            mov     r7,a
031F 33        1191            rlc     a
0320 95E0      1192            subb    a,acc
0322 F8        1193            mov     r0,a
0323 F9        1194            mov     r1,a
0324 EE        1195            mov     a,r6
0325 2A        1196            add     a,r2
0326 FA        1197            mov     r2,a
0327 EF        1198            mov     a,r7
0328 3B        1199            addc    a,r3
0329 FB        1200            mov     r3,a
032A E8        1201            mov     a,r0
032B 3C        1202            addc    a,r4
032C FC        1203            mov     r4,a
032D E9        1204            mov     a,r1
032E 3D        1205            addc    a,r5
032F FD        1206            mov     r5,a
0330           1207   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:257: C=1.44/(((long)1550+2*(long)1550)*F)*1000000;
0330 8A00      1208            mov     __mullong_PARM_2,r2
0332 8B01      1209            mov     (__mullong_PARM_2 + 1),r3
0334 8C02      1210            mov     (__mullong_PARM_2 + 2),r4
0336 8D03      1211            mov     (__mullong_PARM_2 + 3),r5
0338 90122A    1212            mov     dptr,#0x122A
033B E4        1213            clr     a
033C F5F0      1214            mov     b,a
033E C002      1215            push    ar2
0340 C003      1216            push    ar3
0342 C004      1217            push    ar4
0344 C005      1218            push    ar5
0346 120000    1219            lcall   __mullong
0349 120000    1220            lcall   ___ulong2fs
034C AE82      1221            mov     r6,dpl
034E AF83      1222            mov     r7,dph
0350 A8F0      1223            mov     r0,b
0352 F9        1224            mov     r1,a
0353 C006      1225            push    ar6
0355 C007      1226            push    ar7
0357 C000      1227            push    ar0
0359 C001      1228            push    ar1
035B 9051EC    1229            mov     dptr,#0x51EC
035E 75F0B8    1230            mov     b,#0xB8
0361 743F      1231            mov     a,#0x3F
0363 120000    1232            lcall   ___fsdiv
0366 AE82      1233            mov     r6,dpl
0368 AF83      1234            mov     r7,dph
036A A8F0      1235            mov     r0,b
036C F9        1236            mov     r1,a
036D E581      1237            mov     a,sp
036F 24FC      1238            add     a,#0xfc
0371 F581      1239            mov     sp,a
0373 C006      1240            push    ar6
0375 C007      1241            push    ar7
0377 C000      1242            push    ar0
0379 C001      1243            push    ar1
037B 902400    1244            mov     dptr,#0x2400
037E 75F074    1245            mov     b,#0x74
0381 7449      1246            mov     a,#0x49
0383 120000    1247            lcall   ___fsmul
0386 AE82      1248            mov     r6,dpl
0388 AF83      1249            mov     r7,dph
038A A8F0      1250            mov     r0,b
038C F9        1251            mov     r1,a
038D E581      1252            mov     a,sp
038F 24FC      1253            add     a,#0xfc
0391 F581      1254            mov     sp,a
0393           1255   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:258: printf("------------NEW DATA-------------\n");
0393 C006      1256            push    ar6
0395 C007      1257            push    ar7
0397 C000      1258            push    ar0
0399 C001      1259            push    ar1
039B 7498      1260            mov     a,#__str_6
039D C0E0      1261            push    acc
039F 74BE      1262            mov     a,#(__str_6 >> 8)
03A1 C0E0      1263            push    acc
03A3 7480      1264            mov     a,#0x80
03A5 C0E0      1265            push    acc
03A7 120000    1266            lcall   _printf
03AA 1581      1267            dec     sp
03AC 1581      1268            dec     sp
03AE 1581      1269            dec     sp
03B0 D001      1270            pop     ar1
03B2 D000      1271            pop     ar0
03B4 D007      1272            pop     ar7
03B6 D006      1273            pop     ar6
03B8 D005      1274            pop     ar5
03BA D004      1275            pop     ar4
03BC D003      1276            pop     ar3
03BE D002      1277            pop     ar2
03C0           1278   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:259: printf("f=%luHz", F);
03C0 C006      1279            push    ar6
03C2 C007      1280            push    ar7
03C4 C000      1281            push    ar0
03C6 C001      1282            push    ar1
03C8 C002      1283            push    ar2
03CA C003      1284            push    ar3
03CC C004      1285            push    ar4
03CE C005      1286            push    ar5
03D0 74D8      1287            mov     a,#__str_7
03D2 C0E0      1288            push    acc
03D4 74BE      1289            mov     a,#(__str_7 >> 8)
03D6 C0E0      1290            push    acc
03D8 7480      1291            mov     a,#0x80
03DA C0E0      1292            push    acc
03DC 120000    1293            lcall   _printf
03DF E581      1294            mov     a,sp
03E1 24F9      1295            add     a,#0xf9
03E3 F581      1296            mov     sp,a
03E5           1297   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:260: printf("\n");
03E5 7418      1298            mov     a,#__str_8
03E7 C0E0      1299            push    acc
03E9 74BF      1300            mov     a,#(__str_8 >> 8)
03EB C0E0      1301            push    acc
03ED 7480      1302            mov     a,#0x80
03EF C0E0      1303            push    acc
03F1 120000    1304            lcall   _printf
03F4 1581      1305            dec     sp
03F6 1581      1306            dec     sp
03F8 1581      1307            dec     sp
03FA D001      1308            pop     ar1
03FC D000      1309            pop     ar0
03FE D007      1310            pop     ar7
0400 D006      1311            pop     ar6
0402           1312   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:262: if (C > 0.1){
0402 C006      1313            push    ar6
0404 C007      1314            push    ar7
0406 C000      1315            push    ar0
0408 C001      1316            push    ar1
040A 74CD      1317            mov     a,#0xCD
040C C0E0      1318            push    acc
040E 74CC      1319            mov     a,#0xCC
0410 C0E0      1320            push    acc
0412 C0E0      1321            push    acc
0414 743D      1322            mov     a,#0x3D
0416 C0E0      1323            push    acc
0418 8E82      1324            mov     dpl,r6
041A 8F83      1325            mov     dph,r7
041C 88F0      1326            mov     b,r0
041E E9        1327            mov     a,r1
041F 120000    1328            lcall   ___fsgt
0422 AA82      1329            mov     r2,dpl
0424 E581      1330            mov     a,sp
0426 24FC      1331            add     a,#0xfc
0428 F581      1332            mov     sp,a
042A D001      1333            pop     ar1
042C D000      1334            pop     ar0
042E D007      1335            pop     ar7
0430 D006      1336            pop     ar6
0432 EA        1337            mov     a,r2
0433 6000      1338            jz      L013004?
0435           1339   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:263: LCDprint("Cap in microF   ", 1, 1);
0435 75A001    1340            mov     _LCDprint_PARM_2,#0x01
0438 D2D0      1341            setb    _LCDprint_PARM_3
043A 90BCC8    1342            mov     dptr,#__str_5
043D 75F080    1343            mov     b,#0x80
0440 C006      1344            push    ar6
0442 C007      1345            push    ar7
0444 C000      1346            push    ar0
0446 C001      1347            push    ar1
0448 120000    1348            lcall   _LCDprint
044B           1349   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:264: sprintf(buffer, "%fmicroF", C);
044B 74D8      1350            mov     a,#__str_9
044D C0E0      1351            push    acc
044F 74BF      1352            mov     a,#(__str_9 >> 8)
0451 C0E0      1353            push    acc
0453 7480      1354            mov     a,#0x80
0455 C0E0      1355            push    acc
0457 7410      1356            mov     a,#_buffer
0459 C0E0      1357            push    acc
045B 7445      1358            mov     a,#(_buffer >> 8)
045D C0E0      1359            push    acc
045F 7440      1360            mov     a,#0x40
0461 C0E0      1361            push    acc
0463 120000    1362            lcall   _sprintf
0466 E581      1363            mov     a,sp
0468 24F6      1364            add     a,#0xf6
046A F581      1365            mov     sp,a
046C           1366   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:265: LCDprint(buffer, 2, 1);
046C 75A002    1367            mov     _LCDprint_PARM_2,#0x02
046F D2D0      1368            setb    _LCDprint_PARM_3
0471 904510    1369            mov     dptr,#_buffer
0474 75F040    1370            mov     b,#0x40
0477 120000    1371            lcall   _LCDprint
047A 020000    1372            ljmp    L013005?
047D           1373   L013004?:
047D           1374   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:267: C=C*950;
047D C006      1375            push    ar6
047F C007      1376            push    ar7
0481 C000      1377            push    ar0
0483 C001      1378            push    ar1
0485 908000    1379            mov     dptr,#0x8000
0488 75F06D    1380            mov     b,#0x6D
048B 7444      1381            mov     a,#0x44
048D 120000    1382            lcall   ___fsmul
0490 AE82      1383            mov     r6,dpl
0492 AF83      1384            mov     r7,dph
0494 A8F0      1385            mov     r0,b
0496 F9        1386            mov     r1,a
0497 E581      1387            mov     a,sp
0499 24FC      1388            add     a,#0xfc
049B F581      1389            mov     sp,a
049D           1390   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:268: if (C < 8){
049D C006      1391            push    ar6
049F C007      1392            push    ar7
04A1 C000      1393            push    ar0
04A3 C001      1394            push    ar1
04A5 E4        1395            clr     a
04A6 C0E0      1396            push    acc
04A8 C0E0      1397            push    acc
04AA C0E0      1398            push    acc
04AC 7441      1399            mov     a,#0x41
04AE C0E0      1400            push    acc
04B0 8E82      1401            mov     dpl,r6
04B2 8F83      1402            mov     dph,r7
04B4 88F0      1403            mov     b,r0
04B6 E9        1404            mov     a,r1
04B7 120000    1405            lcall   ___fslt
04BA AA82      1406            mov     r2,dpl
04BC E581      1407            mov     a,sp
04BE 24FC      1408            add     a,#0xfc
04C0 F581      1409            mov     sp,a
04C2 D001      1410            pop     ar1
04C4 D000      1411            pop     ar0
04C6 D007      1412            pop     ar7
04C8 D006      1413            pop     ar6
04CA EA        1414            mov     a,r2
04CB 6000      1415            jz      L013002?
04CD           1416   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:269: C=C*0.8;
04CD C006      1417            push    ar6
04CF C007      1418            push    ar7
04D1 C000      1419            push    ar0
04D3 C001      1420            push    ar1
04D5 90CCCD    1421            mov     dptr,#0xCCCD
04D8 75F04C    1422            mov     b,#0x4C
04DB 743F      1423            mov     a,#0x3F
04DD 120000    1424            lcall   ___fsmul
04E0 AE82      1425            mov     r6,dpl
04E2 AF83      1426            mov     r7,dph
04E4 A8F0      1427            mov     r0,b
04E6 F9        1428            mov     r1,a
04E7 E581      1429            mov     a,sp
04E9 24FC      1430            add     a,#0xfc
04EB F581      1431            mov     sp,a
04ED           1432   L013002?:
04ED           1433   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:271: LCDprint("Cap in nanoF    ", 1, 1);
04ED 75A001    1434            mov     _LCDprint_PARM_2,#0x01
04F0 D2D0      1435            setb    _LCDprint_PARM_3
04F2 90C118    1436            mov     dptr,#__str_10
04F5 75F080    1437            mov     b,#0x80
04F8 C006      1438            push    ar6
04FA C007      1439            push    ar7
04FC C000      1440            push    ar0
04FE C001      1441            push    ar1
0500 120000    1442            lcall   _LCDprint
0503           1443   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:272: sprintf(buffer, "%fnanoF", C);
0503 7458      1444            mov     a,#__str_11
0505 C0E0      1445            push    acc
0507 74C1      1446            mov     a,#(__str_11 >> 8)
0509 C0E0      1447            push    acc
050B 7480      1448            mov     a,#0x80
050D C0E0      1449            push    acc
050F 7410      1450            mov     a,#_buffer
0511 C0E0      1451            push    acc
0513 7445      1452            mov     a,#(_buffer >> 8)
0515 C0E0      1453            push    acc
0517 7440      1454            mov     a,#0x40
0519 C0E0      1455            push    acc
051B 120000    1456            lcall   _sprintf
051E E581      1457            mov     a,sp
0520 24F6      1458            add     a,#0xf6
0522 F581      1459            mov     sp,a
0524           1460   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:273: LCDprint(buffer, 2, 1);
0524 75A002    1461            mov     _LCDprint_PARM_2,#0x02
0527 D2D0      1462            setb    _LCDprint_PARM_3
0529 904510    1463            mov     dptr,#_buffer
052C 75F040    1464            mov     b,#0x40
052F 120000    1465            lcall   _LCDprint
0532           1466   L013005?:
0532           1467   ;        C:\Users\cosr3\Documents\GitHub\ELEC-291-Lab4\Lab4.c:275: printf("\x1b[0K"); // ANSI: Clear from cursor to end of line.
0532 7498      1468            mov     a,#__str_12
0534 C0E0      1469            push    acc
0536 74C1      1470            mov     a,#(__str_12 >> 8)
0538 C0E0      1471            push    acc
053A 7480      1472            mov     a,#0x80
053C C0E0      1473            push    acc
053E 120000    1474            lcall   _printf
0541 1581      1475            dec     sp
0543 1581      1476            dec     sp
0545 1581      1477            dec     sp
0547 020000    1478            ljmp    L013007?
054A           1479            rseg R_CSEG
054A           1480   
0000           1481            rseg R_XINIT
0000           1482   
0000           1483            rseg R_CONST
0000           1484   __str_0:
0000 1B        1485            db 0x1B
0001 5B324A    1486            db '[2J'
0004 00        1487            db 0x00
0005           1488   __str_1:
0005 45464D38  1489            db 'EFM8 Frequency measurement using Timer/Counter 0.'
     20467265
     7175656E
     6379206D
     65617375
     72656D65
     6E742075
     73696E67
     2054696D
     65722F43
     6F756E74
     65722030
     2E
0036 0A        1490            db 0x0A
0037 46696C65  1491            db 'File: %s'
     3A202573
003F 0A        1492            db 0x0A
0040 43        1493            db 'C'
0041 6F6D7069  1494            db 'ompiled: %s, %s'
     6C65643A
     2025732C
     202573
0050 0A        1495            db 0x0A
0051 0A        1496            db 0x0A
0052 00        1497            db 0x00
0053           1498   __str_2:
0053 433A      1499            db 'C:'
0055 5C        1500            db 0x5C
0056 55736572  1501            db 'Users'
     73
005B 5C        1502            db 0x5C
005C 636F7372  1503            db 'cosr3'
     33
0061 5C        1504            db 0x5C
0062 446F6375  1505            db 'Documents'
     6D656E74
     73
006B 5C        1506            db 0x5C
006C 47697448  1507            db 'GitHub'
     7562
0072 5C        1508            db 0x5C
0073 454C4543  1509            db 'ELEC-291-Lab4'
     2D323931
     2D4C6162
     34
0080 5C        1510            db 0x5C
0081 4C616234  1511            db 'Lab4.c'
     2E63
0087 00        1512            db 0x00
0088           1513   __str_3:
0088 46656220  1514            db 'Feb 28 2024'
     32382032
     303234
0093 00        1515            db 0x00
0094           1516   __str_4:
0094 32303A34  1517            db '20:44:28'
     343A3238
009C 00        1518            db 0x00
009D           1519   __str_5:
009D 43617020  1520            db 'Cap in microF   '
     696E206D
     6963726F
     46202020
00AD 00        1521            db 0x00
00AE           1522   __str_6:
00AE 2D2D2D2D  1523            db '------------NEW DATA-------------'
     2D2D2D2D
     2D2D2D2D
     4E455720
     44415441
     2D2D2D2D
     2D2D2D2D
     2D2D2D2D
     2D
00CF 0A        1524            db 0x0A
00D0 00        1525            db 0x00
00D1           1526   __str_7:
00D1 663D256C  1527            db 'f=%luHz'
     75487A
00D8 00        1528            db 0x00
00D9           1529   __str_8:
00D9 0A        1530            db 0x0A
00DA 00        1531            db 0x00
00DB           1532   __str_9:
00DB 25666D69  1533            db '%fmicroF'
     63726F46
00E3 00        1534            db 0x00
00E4           1535   __str_10:
00E4 43617020  1536            db 'Cap in nanoF    '
     696E206E
     616E6F46
     20202020
00F4 00        1537            db 0x00
00F5           1538   __str_11:
00F5 25666E61  1539            db '%fnanoF'
     6E6F46
00FC 00        1540            db 0x00
00FD           1541   __str_12:
00FD 1B        1542            db 0x1B
00FE 5B304B    1543            db '[0K'
0101 00        1544            db 0x00
0102           1545   
0003           1546            CSEG
0003           1547   
0003           1548   end
